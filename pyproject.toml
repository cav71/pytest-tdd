[build-system]
requires = [
    "hatchling",
    "hatch-ci",
    "typing-extensions",
    "jinja2",
    "pydevd-pycharm~=232.10072.31"
]
build-backend = "hatchling.build"

[project]
name = "pytest-tdd"
dynamic = ["version"]
description = "run pytest on a python module"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
    {name = "Antonio cavallo", email = "a.cavallo@cavallinux.eu" },
]
maintainers = [
    {name = "Antonio cavallo", email = "a.cavallo@cavallinux.eu" },
]
keywords = [ "pre-commit", ]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python"
]
dependencies = [
    "click",
    "pytest",
    "pytest-coverage",
]

[project.optional-dependencies]
docs = [
    "sphinx",
    "sphinx-tabs",
    "sphinx-design",
    "myst-parser",
    "sphinx-book-theme",
]

dev = [
    "lxml",
    "mypy",
    "pytest-print",
    "pytest-cov",
    "pytest-html",
    "ruff",
]


[project.urls]
Homepage = "https://github.com/cav71/pytest-tdd"
Documentation = "https://github.com/cav71/pytest-tdd"
Repository = "https://github.com/cav71/pytest-tdd"

[project.scripts]
pytest-tdd = "pytest_tdd:script.main"

[tool.hatch.version]
source = "ci"
version-file = "src/pytest_tdd/__init__.py"

[tool.hatch.build]
ignore-ci = true

[tool.hatch.build.targets.wheel]
packages = ["src/pytest_tdd"]
[tool.ruff]
target-version = "py38"
line-length = 120
format.preview = true
format.docstring-code-line-length = 100
format.docstring-code-format = true
lint.select = [
  "ALL",
]
lint.ignore = [
  "ANN401", # allow Any as type annotation
  "COM812", # Conflict with formatter
  "CPY",    # No copyright statements
  "D203",   # `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible
  "D212",   # `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible
  "DOC",    # no support
  "ISC001", # Conflict with formatter
  "S104",   # Possible binding to all interface
  "PLC0415",
]

lint.per-file-ignores."src/pytest_tdd/tree.py" = [
  "RUF002",
]

lint.per-file-ignores."tests/**/*.py" = [
  "ANN001",  # don't care about return values in tests
  "ANN201",  # don't care about return values in tests
  "D",       # don't care about documentation in tests
  "FBT",     # don't care about booleans as positional arguments in tests
  "INP001",  # no implicit namespace
  "PLR2004", # Magic value used in comparison, consider replacing with a constant variable
  "S101",    # asserts allowed in tests
  "S603",    # `subprocess` call: check for execution of untrusted input
]
lint.isort = { known-first-party = [
  "pytest_print",
], required-imports = [
  "from __future__ import annotations",
] }
lint.preview = true


[tool.mypy]
python_version = "3.13"
show_error_codes = true
strict = true
